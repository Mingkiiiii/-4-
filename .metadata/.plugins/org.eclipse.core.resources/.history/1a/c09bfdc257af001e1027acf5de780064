package ch08_collection;

import java.util.ArrayList;

public class CollectionList {

	public static void main(String[] args) {
		/**
		 * 컬렉션 프레임 워크는 데이터를 보다 쉽게 다룰 수 있도록
		 * 재사용 가능한 컬렉션 클래스를 제공함.
		 * List, Set, Map
		 * 1.List : 순서대로 객체를 저장하는 구조, 중복된 원소를 허용
		 * 			원소에 접근하기 위해 인덱스를 사용
		 * 			대표적인 ArrayList, LinkedList
		 * 2. Set : 중복을 허용하지 않느 객체의 모음
		 * 			원소의 순서는 보장하지 않음
		 * 			대표 : HashSet, TreeSet
		 * 3.Map  : 키와 값의 쌍으로 이루어진 개게를 저장하는 구조
		 * 			각 키는 하나의 값을 가리킴.
		 * 			대표 : HashMap, TreeMap
		 */
		ArrayList<String> students = new ArrayList<>();
//		ArrayList<String> students = new ArrayList<String>(); 오른쪽은 생략 가능
		//<> <-- 이 부분은 제네릭(Generic)이라고 함.
		// 코드에서 타입의 안정성을 보장할 수 있으면 불필요한 캐스팅을 줄이기 위해
		// 제네릭은 객체(참조타입)만 담을 수 있음.
		// Wrapper Class(기본타입)을 객체로 만든 클래스 (int, boolean...)
		ArrayList<Integer> intList = new ArrayList<>();
		//list 기본 메서드 .add(요소) 요소 추가시 사용
		intList.add(5);
		intList.add(10);
		System.out.println(intList);
		students.add("팽수");
		students.add("동길");
		System.out.println(students);
		

	}

}
